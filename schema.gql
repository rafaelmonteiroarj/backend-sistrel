# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Budget {
  createdAt: DateTime!
  email: String!
  id: String!
  m2: String!
  message: String!
  mobileNumber: String!
  name: String!
  phoneNumber: String!
  productOfInterest: String!
  typeOfWork: String!
  updatedAt: DateTime!
  vao: String!
}

type Contact {
  createdAt: DateTime!
  email: String!
  id: String!
  message: String!
  mobileNumber: String!
  name: String!
  phoneNumber: String!
  updatedAt: DateTime!
}

input CreateBudgetInput {
  email: String!
  m2: String!
  message: String!
  mobileNumber: String!
  name: String!
  phoneNumber: String!
  productOfInterest: String!
  typeOfWork: String!
  vao: String!
}

input CreateContactInput {
  email: String!
  message: String!
  mobileNumber: String!
  name: String!
  phoneNumber: String!
}

input CreateProviderInput {
  companyCnpj: String!
  companyName: String!
  companyPhoneNumber: String!
  email: String!
  message: String!
  mobileNumber: String!
  name: String!
  phoneNumber: String!
  typeOfService: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  avatarUser(avatar: Upload!, id: String!): Boolean!
  createBudget(data: CreateBudgetInput!, files: [Upload!]): Budget!
  createContact(data: CreateContactInput!): Contact!
  createProvider(data: CreateProviderInput!, files: [Upload!]): Provider!
  createUser(data: CreateUserInput!): User!
  deleteBudget(id: String!): Boolean!
  deleteContact(id: String!): Boolean!
  deleteProvider(id: String!): Boolean!
  deleteUser(id: String!): Boolean!
  updateUser(data: UpdateUserInput!, id: String!): User!
}

type Provider {
  companyCnpj: String!
  companyName: String!
  companyPhoneNumber: String!
  createdAt: DateTime!
  email: String!
  id: String!
  message: String!
  mobileNumber: String!
  name: String!
  phoneNumber: String!
  typeOfService: String!
  updatedAt: DateTime!
}

type Query {
  budgetById(id: String!): Budget!
  budgets: [Budget!]!
  contactById(id: String!): Contact!
  contacts: [Contact!]!
  provders: [Provider!]!
  providerById(id: String!): Provider!
  userById(id: String!): User!
  users: [User!]!
}

input UpdateUserInput {
  email: String
  name: String
  password: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatar: String
  createdAt: DateTime!
  email: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}
